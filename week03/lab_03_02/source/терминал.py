import time

from пицца import *
from заказ import *

class Терминал:
   """Класс Терминал обеспечивает взаимодействие с клиентом."""

   КОМПАНИЯ = "Пиццерия #1"
   КОМАНДА_ОТМЕНА_ЗАКАЗА = -1
   КОМАНДА_ПОДТВЕРЖДЕНИЕ_ЗАКАЗА = 0

   def __init__(self):
       """Конструктор класса."""
       self.меню = [ПиццаПепперони(), ПиццаБарбекю(), ПиццаДарыМоря()]
       self.заказ = None
       self.отображать_меню = True

   def __str__(self) -> str:
       """Вернуть строковое представление класса."""
       return f"{Терминал.КОМПАНИЯ}\nВерсия программы: 1.0"

   def показать_меню(self) -> None:
       """Показать меню."""
       if not self.отображать_меню:
           return

       print(f"{Терминал.КОМПАНИЯ}\nДобро пожаловать!\n")
       print("Меню:")
       for i, пицца in enumerate(self.меню, 1):
           print(f"{i}. {пицца}")
       print("Для выбора укажите цифру через <ENTER>.")
       print("Для отмены заказа введите -1")
       print("Для подтверждения заказа введите 0")
       self.отображать_меню = False

   def обработать_команду(self, пункт_меню: int) -> None:
       """Обработать действие пользователя."""
       try:
           пункт_меню = int(пункт_меню)
           if пункт_меню == Терминал.КОМАНДА_ОТМЕНА_ЗАКАЗА:
               if self.заказ:
                   print("Заказ отменен.")
                   self.заказ = None
                   self.отображать_меню = True
               else:
                   print("Нет активного заказа для отмены.")
           elif пункт_меню == Терминал.КОМАНДА_ПОДТВЕРЖДЕНИЕ_ЗАКАЗА:
               if self.заказ:
                   print("Заказ подтвержден.")
                   print(self.заказ)
                   self.принять_оплату()
                   self.заказ.выполнить()
                   self.заказ = None
                   self.отображать_меню = True
               else:
                   print("Нет активного заказа для подтверждения.")
           elif 1 <= пункт_меню <= len(self.меню):
               if self.заказ is None:
                   self.заказ = Заказ()
               пицца = self.меню[пункт_меню - 1]
               self.заказ.добавить(пицца)
               print(f"Пицца {пицца.название} добавлена!")
           else:
               raise ValueError
       except ValueError:
           print("Не могу распознать команду! Проверьте ввод.")
       except Exception:
           print("Во время работы терминала произошла ошибка...")

   def рассчитать_сдачу(self, оплата: float) -> float:
       """Вернуть сдачу для 'оплата'."""
       if оплата < self.заказ.сумма():
           raise ValueError("Сумма оплаты недостаточна.")
       return оплата - self.заказ.сумма()

   def принять_оплату(self) -> None:
       """Обработать оплату."""
       try:
           оплата = float(input(f"Введите сумму оплаты: "))
           сдача = self.рассчитать_сдачу(оплата)
           print(f"Сдача: {сдача:.2f} р.")
       except Exception:
           print("Оплата не удалась. Заказ будет отменен.")
           raise
